{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderjarabik/Desktop/12-adv-starting-project/frontend/src/pages/NewEvent.js\";\nimport EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n_c = NewEventPage;\n;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  console.log(request.formData().get('title'));\n  const data = await request.formData();\n  console.log(data + 'data');\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n  ;\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","json","redirect","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","console","log","formData","get","data","eventData","title","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["/Users/alexanderjarabik/Desktop/12-adv-starting-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\n\nfunction NewEventPage() {\n\n    return <EventForm />\n};\n\nexport default NewEventPage;\n\nexport async function action({ request, params }) {\n    console.log(request.formData().get('title'));\n    const data = await request.formData();\n    console.log(data + 'data');\n    const eventData = {\n        title: data.get('title'),\n        image: data.get('image'),\n        date: data.get('date'),\n        description: data.get('description')\n    };\n\n\n    const response = await fetch('http://localhost:8080/events', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(eventData)\n    });\n\n    if (!response.ok) {\n        throw json({ message: 'Could not save event.' }, { status: 500 });\n    };\n    return redirect('/events');\n}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,YAAYA,CAAA,EAAG;EAEpB,oBAAOD,OAAA,CAACJ,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB;AAACC,EAAA,GAHQL,YAAY;AAGpB;AAED,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC5CG,OAAO,CAACC,GAAG,CAACH,OAAO,CAACI,QAAQ,CAAC,CAAC,CAACC,GAAG,CAAC,OAAO,CAAC,CAAC;EAC5C,MAAMC,IAAI,GAAG,MAAMN,OAAO,CAACI,QAAQ,CAAC,CAAC;EACrCF,OAAO,CAACC,GAAG,CAACG,IAAI,GAAG,MAAM,CAAC;EAC1B,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEF,IAAI,CAACD,GAAG,CAAC,OAAO,CAAC;IACxBI,KAAK,EAAEH,IAAI,CAACD,GAAG,CAAC,OAAO,CAAC;IACxBK,IAAI,EAAEJ,IAAI,CAACD,GAAG,CAAC,MAAM,CAAC;IACtBM,WAAW,EAAEL,IAAI,CAACD,GAAG,CAAC,aAAa;EACvC,CAAC;EAGD,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAClC,CAAC,CAAC;EAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM/B,IAAI,CAAC;MAAEgC,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE;EAAC;EACD,OAAOhC,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAQ,EAAA;AAAAyB,YAAA,CAAAzB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}