{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderjarabik/Desktop/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  console.log(events);\n  //if (data.isError) {\n  //    return <p>{data.message}</p>\n  //};\n  //const events = data.events;\n  //return <EventsList events={events} />\n\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return { isError: true, message: 'Could not fetch events.' }\n    //throw new Response(JSON.stringify({ message: 'Could not fetch events' }), { status: 500 });\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","console","log","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["/Users/alexanderjarabik/Desktop/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData, json, defer, Await } from 'react-router-dom';\n\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\n\nfunction EventsPage() {\n\n    const events = useLoaderData();\n    console.log(events)\n    //if (data.isError) {\n    //    return <p>{data.message}</p>\n    //};\n    //const events = data.events;\n    //return <EventsList events={events} />\n\n    return (\n        <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...!</p>}>\n            <Await resolve={events}>\n                {loadedEvents => <EventsList events={loadedEvents} />}\n            </Await>\n        </Suspense>\n\n    );\n\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        //return { isError: true, message: 'Could not fetch events.' }\n        //throw new Response(JSON.stringify({ message: 'Could not fetch events' }), { status: 500 });\n        throw json(\n            { message: 'Could not fetch events.' },\n            {\n                status: 500,\n            });\n    } else {\n        const resData = await response.json();\n        return resData.events;\n    }\n}\n\nexport function loader() {\n    return defer({\n        events: loadEvents()\n    });\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAMC,MAAM,GAAGV,aAAa,CAAC,CAAC;EAC9BW,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB;EACA;EACA;EACA;EACA;;EAEA,oBACIH,OAAA,CAACF,QAAQ;IAACQ,QAAQ,eAAEN,OAAA;MAAGO,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eACnET,OAAA,CAACJ,KAAK;MAACkB,OAAO,EAAEX,MAAO;MAAAM,QAAA,EAClBM,YAAY,iBAAIf,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEY;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAInB;AAACX,EAAA,CAnBQD,UAAU;EAAA,QAEAR,aAAa;AAAA;AAAAuB,EAAA,GAFvBf,UAAU;AAqBnB,eAAeA,UAAU;AAEzB,eAAegB,UAAUA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA;IACA,MAAM1B,IAAI,CACN;MAAE2B,OAAO,EAAE;IAA0B,CAAC,EACtC;MACIC,MAAM,EAAE;IACZ,CAAC,CAAC;EACV,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACxB,IAAI,CAAC,CAAC;IACrC,OAAO6B,OAAO,CAACpB,MAAM;EACzB;AACJ;AAEA,OAAO,SAASqB,MAAMA,CAAA,EAAG;EACrB,OAAO7B,KAAK,CAAC;IACTQ,MAAM,EAAEc,UAAU,CAAC;EACvB,CAAC,CAAC;AACN;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}